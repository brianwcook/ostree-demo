name: Build & Publish
on:
  schedule:
    - cron: 0 7 * * *
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  build:
    name: Build & Publish
    runs-on: ubuntu-latest
    container:
      image: fedora:latest
      options: --privileged
    steps:
      - name: Restore DNF's cache
        uses: actions/cache@v2
        with:
          key: dnf-cache
          path: |
            /dnf-cache
      - name: Install packages
        run: |
          echo "keepcache=1" | sudo tee -a /etc/dnf/dnf.conf >/dev/null
          echo "cachedir=/dnf-cache" | sudo tee -a /etc/dnf/dnf.conf >/dev/null
          dnf -y update
          dnf -y install \
            buildah \
            docker \
            git \
            podman
      - name: Checkout the repository
        uses: actions/checkout@v3
        with:
          fetch-depth: 1
      - name: Generate tags
        id: tags
        run: |
          git config --global --add safe.directory "$GITHUB_WORKSPACE"
          tags=("latest" "$(date +'%F') "$(git rev-parse --short "$GITHUB_SHA")"")
          echo "tags=${tags[*]}" >> $GITHUB_OUTPUT
      - name: Build the image
        id: build
        uses: redhat-actions/buildah-build@v2
        with:
          containerfiles: |
            Containerfile
          image: ${{ github.event.repository.name }}
          tags: ${{ steps.tags.outputs.tags }}
          oci: true
          extra-args: |
            -v /dnf-cache:/dnf-cache:Z
      - name: Push to GHCR
        uses: redhat-actions/push-to-registry@v2
        id: push-ghcr
        with:
          image: ${{ steps.build.outputs.image }}
          tags: ${{ steps.build.outputs.tags }}
          registry: ghcr.io/${{ github.repository_owner }}
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Push to Docker Hub
        uses: redhat-actions/push-to-registry@v2
        id: push-dockerhub
        with:
          image: ${{ steps.build.outputs.image }}
          tags: ${{ steps.build.outputs.tags }}
          registry: docker.io/${{ github.actor }}
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Install `cosign`
        uses: sigstore/cosign-installer@main
      - name: Write the `cosign` private key to the disk
        run: |
          echo "${{ secrets.COSIGN_PRIVATE_KEY }}" > cosign.key
      - name: Login to GHCR
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ github.token }}
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ github.actor }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Sign container images
        run: |
          cosign sign \
            --key cosign.key \
            -a git_sha=${{ github.sha }} \
            -a git_tag=${{ github.ref }} \
            "${{ steps.push-ghcr.outputs.registry-path }}@${{ steps.push-ghcr.outputs.digest }}"
          cosign sign \
            --key cosign.key \
            -a git_sha=${{ github.sha }} \
            -a git_tag=${{ github.ref }} \
            "${{ steps.push-dockerhub.outputs.registry-path }}@${{ steps.push-dockerhub.outputs.digest }}"
        env:
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      - name: Verify signed images
        run: |
          cosign verify \
            --key cosign.pub \
            "${{ steps.push-ghcr.outputs.registry-path}}@${{ steps.push-ghcr.outputs.digest }}"
          cosign verify \
            --key cosign.pub \
            "${{ steps.push-dockerhub.outputs.registry-path}}@${{ steps.push-dockerhub.outputs.digest }}"
      - name: Echo push outputs
        run: |
          echo "${{ toJSON(steps.push-ghcr.outputs) }}"
          echo "${{ toJSON(steps.push-dockerhub.outputs) }}"
